[{"path":"https://sevvandi.github.io/lookout/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sevvandi Kandanaarachchi. Author, maintainer. Rob Hyndman. Author. Chris Fraley. Contributor.","code":""},{"path":"https://sevvandi.github.io/lookout/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kandanaarachchi S, Hyndman R (2025). lookout: Leave One Kernel Density Estimates Outlier Detection. R package version 0.1.5, https://sevvandi.github.io/lookout/.","code":"@Manual{,   title = {lookout: Leave One Out Kernel Density Estimates for Outlier Detection},   author = {Sevvandi Kandanaarachchi and Rob Hyndman},   year = {2025},   note = {R package version 0.1.5},   url = {https://sevvandi.github.io/lookout/}, }"},{"path":"https://sevvandi.github.io/lookout/index.html","id":"lookout-","dir":"","previous_headings":"","what":"Leave One Out Kernel Density Estimates for Outlier Detection","title":"Leave One Out Kernel Density Estimates for Outlier Detection","text":"lookout identifies outliers data using leave-one-kernel density estimates extreme value theory. bandwidth kernel density estimates computed using persistent homology, technique topological data analysis. Using peak--threshold method, Generalized Pareto Distribution fitted log leave-one-kde values identify outliers. See Kandanaarachchi Hyndman (2021) underlying methodology.","code":""},{"path":"https://sevvandi.github.io/lookout/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Leave One Out Kernel Density Estimates for Outlier Detection","text":"can install released version lookout CRAN : development version GitHub :","code":"#install.packages(\"lookout\") # install.packages(\"devtools\") devtools::install_github(\"sevvandi/lookout\")"},{"path":"https://sevvandi.github.io/lookout/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Leave One Out Kernel Density Estimates for Outlier Detection","text":"Next look outlier persistence. outlier persistence plot shows outliers persist range bandwidth values different levels significance. strength inversely proportional level significance. level significance 0.01, strength 10 0.1, strength 1.","code":"library(lookout) lo <- lookout(faithful) lo #> Leave-out-out KDE outliers using lookout algorithm #>  #> Call: lookout(X = faithful) #>  #>   Outliers Probability #> 1        6 0.005553188 #> 2       24 0.006423949 #> 3       46 0.007934127 #> 4      149 0.008300670 #> 5      158 0.007242257 #> 6      197 0.004333429 #> 7      211 0.000000000 #> 8      244 0.004956339 autoplot(lo) persistence <- persisting_outliers(faithful) autoplot(persistence)"},{"path":"https://sevvandi.github.io/lookout/reference/autoplot.lookoutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots outliers identified by lookout algorithm. — autoplot.lookoutliers","title":"Plots outliers identified by lookout algorithm. — autoplot.lookoutliers","text":"Scatterplot two columns data set outliers highlighted.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/autoplot.lookoutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots outliers identified by lookout algorithm. — autoplot.lookoutliers","text":"","code":"# S3 method for class 'lookoutliers' autoplot(object, columns = 1:2, ...)"},{"path":"https://sevvandi.github.io/lookout/reference/autoplot.lookoutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots outliers identified by lookout algorithm. — autoplot.lookoutliers","text":"object output function lookout. columns columns original data plot (specified either numbers strings) ... arguments currently ignored.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/autoplot.lookoutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots outliers identified by lookout algorithm. — autoplot.lookoutliers","text":"ggplot object.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/autoplot.lookoutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots outliers identified by lookout algorithm. — autoplot.lookoutliers","text":"","code":"X <- rbind(   data.frame(     x = rnorm(500),     y = rnorm(500)   ),   data.frame(     x = rnorm(5, mean = 10, sd = 0.2),     y = rnorm(5, mean = 10, sd = 0.2)   ) ) lo <- lookout(X) autoplot(lo)"},{"path":"https://sevvandi.github.io/lookout/reference/autoplot.persistingoutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots outlier persistence for a range of significance levels. — autoplot.persistingoutliers","title":"Plots outlier persistence for a range of significance levels. — autoplot.persistingoutliers","text":"function plots outlier persistence range significance levels using algorithm lookout, outlier detection method uses leave-one-kernel density estimates generalized Pareto distributions find outliers.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/autoplot.persistingoutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots outlier persistence for a range of significance levels. — autoplot.persistingoutliers","text":"","code":"# S3 method for class 'persistingoutliers' autoplot(object, alpha = object$alpha, ...)"},{"path":"https://sevvandi.github.io/lookout/reference/autoplot.persistingoutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots outlier persistence for a range of significance levels. — autoplot.persistingoutliers","text":"object output function persisting_outliers. alpha significance levels plot. ... arguments currently ignored.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/autoplot.persistingoutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots outlier persistence for a range of significance levels. — autoplot.persistingoutliers","text":"ggplot object.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/autoplot.persistingoutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots outlier persistence for a range of significance levels. — autoplot.persistingoutliers","text":"","code":"X <- rbind(   data.frame(     x = rnorm(500),     y = rnorm(500)   ),   data.frame(     x = rnorm(5, mean = 10, sd = 0.2),     y = rnorm(5, mean = 10, sd = 0.2)   ) ) plot(X, pch = 19)  outliers <- persisting_outliers(X, scale = FALSE) autoplot(outliers)"},{"path":"https://sevvandi.github.io/lookout/reference/find_tda_bw.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies bandwidth for outlier detection. — find_tda_bw","title":"Identifies bandwidth for outlier detection. — find_tda_bw","text":"function identifies bandwidth used kernel density estimate computation. function uses topological data analysis (TDA) find badnwidth.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/find_tda_bw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies bandwidth for outlier detection. — find_tda_bw","text":"","code":"find_tda_bw(X, fast = TRUE, gamma = 0.95, use_differences = FALSE)"},{"path":"https://sevvandi.github.io/lookout/reference/find_tda_bw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies bandwidth for outlier detection. — find_tda_bw","text":"X numerical input data data.frame, matrix tibble format. fast TRUE (default), makes computation faster sub-setting data bandwidth calculation. gamma Parameter bandwidth calculation giving quantile Rips death radii use bandwidth. Default 0.97. Ignored old version; lower limit maximum Rips death radii difference used. Also ignored bw provided. use_differences TRUE, bandwidth set lower point maximum Rips death radii differences. FALSE, gamma quantile Rips death radii used. Default FALSE.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/find_tda_bw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies bandwidth for outlier detection. — find_tda_bw","text":"bandwidth","code":""},{"path":"https://sevvandi.github.io/lookout/reference/find_tda_bw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies bandwidth for outlier detection. — find_tda_bw","text":"","code":"X <- rbind(   data.frame(     x = rnorm(500),     y = rnorm(500)   ),   data.frame(     x = rnorm(5, mean = 10, sd = 0.2),     y = rnorm(5, mean = 10, sd = 0.2)   ) ) find_tda_bw(X, fast = TRUE) #> [1] 0.9238231"},{"path":"https://sevvandi.github.io/lookout/reference/lookout-package.html","id":null,"dir":"Reference","previous_headings":"","what":"lookout: Leave One Out Kernel Density Estimates for Outlier Detection — lookout-package","title":"lookout: Leave One Out Kernel Density Estimates for Outlier Detection — lookout-package","text":"Outlier detection using leave-one-kernel density estimates extreme value theory. bandwidth kernel density estimates computed using persistent homology, technique topological data analysis. Using peak--threshold method, generalized Pareto distribution fitted log leave-one-kde values identify outliers.","code":""},{"path":[]},{"path":"https://sevvandi.github.io/lookout/reference/lookout-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"lookout: Leave One Out Kernel Density Estimates for Outlier Detection — lookout-package","text":"Maintainer: Sevvandi Kandanaarachchi sevvandik@gmail.com (ORCID) Authors: Rob Hyndman rob.hyndman@monash.edu (ORCID) contributors: Chris Fraley fraley@u.washington.edu [contributor]","code":""},{"path":"https://sevvandi.github.io/lookout/reference/lookout.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies outliers using the algorithm lookout. — lookout","title":"Identifies outliers using the algorithm lookout. — lookout","text":"function identifies outliers using algorithm lookout, outlier detection method uses leave-one-kernel density estimates generalized Pareto distributions find outliers.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/lookout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies outliers using the algorithm lookout. — lookout","text":"","code":"lookout(   X,   alpha = 0.01,   beta = 0.9,   gamma = 0.97,   bw = NULL,   gpd = NULL,   scale = TRUE,   fast = NROW(X) > 1000,   old_version = FALSE )"},{"path":"https://sevvandi.github.io/lookout/reference/lookout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies outliers using the algorithm lookout. — lookout","text":"X numerical input data data.frame, matrix tibble format. alpha level significance. Default 0.01. 1/100 chance point falsely classified outlier. beta quantile threshold used GPD estimation. Default 0.90. ensure enough data available, values greater 0.90 set 0.90. gamma Parameter bandwidth calculation giving quantile Rips death radii use bandwidth. Default 0.97. Ignored old version; lower limit maximum Rips death radii difference used. Also ignored bw provided. bw Bandwidth parameter. NULL (default), bandwidth found using Persistent Homology. gpd Generalized Pareto distribution parameters. NULL (default), estimated data. scale TRUE, data standardized. Using old version, unit scaling applied column range [0,1]. new version, robust rotation scaling used columns approximately uncorrelated unit variance. Default TRUE. fast TRUE (default), makes computation faster sub-setting data bandwidth calculation. old_version Logical indicator version algorithm use. Default FALSE, meaning newer version used.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/lookout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies outliers using the algorithm lookout. — lookout","text":"list following components: outliers set outliers. outlier_probability GPD probability data. outlier_scores outlier scores data. bandwidth bandwdith selected using persistent homology. kde kernel density estimate values. lookde leave-one-kde values. gpd fitted GPD parameters.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/lookout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies outliers using the algorithm lookout. — lookout","text":"","code":"X <- rbind(   data.frame(     x = rnorm(500),     y = rnorm(500)   ),   data.frame(     x = rnorm(5, mean = 10, sd = 0.2),     y = rnorm(5, mean = 10, sd = 0.2)   ) ) lo <- lookout(X) lo #> Leave-out-out KDE outliers using lookout algorithm #>  #> Call: lookout(X = X) #>  #>   Outliers  Probability #> 1      101 0.0019829565 #> 2      209 0.0004844054 #> 3      216 0.0047098869 #> 4      294 0.0000000000 #> 5      306 0.0001628749 #> 6      468 0.0002994101 #>  autoplot(lo)"},{"path":"https://sevvandi.github.io/lookout/reference/lookout_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies outliers in univariate time series using the algorithm lookout. — lookout_ts","title":"Identifies outliers in univariate time series using the algorithm lookout. — lookout_ts","text":"time series implementation lookout identifies outliers double differenced time series.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/lookout_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies outliers in univariate time series using the algorithm lookout. — lookout_ts","text":"","code":"lookout_ts(x, scale = FALSE, ...)"},{"path":"https://sevvandi.github.io/lookout/reference/lookout_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies outliers in univariate time series using the algorithm lookout. — lookout_ts","text":"x input univariate time series. scale TRUE, data standardized. Using old version, unit scaling applied column range [0,1]. new version, robust rotation scaling used columns approximately uncorrelated unit variance. Default TRUE. ... arguments passed lookout.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/lookout_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies outliers in univariate time series using the algorithm lookout. — lookout_ts","text":"lookout object.","code":""},{"path":[]},{"path":"https://sevvandi.github.io/lookout/reference/lookout_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies outliers in univariate time series using the algorithm lookout. — lookout_ts","text":"","code":"set.seed(1) x <- arima.sim(list(order = c(1, 1, 0), ar = 0.8), n = 200) x[50] <- x[50] + 10 plot(x)  lo <- lookout_ts(x) lo #> Leave-out-out KDE outliers using lookout algorithm #>  #> Call: lookout(X = u, scale = scale) #>  #>   Outliers Probability #> 2       50           0 #>"},{"path":"https://sevvandi.github.io/lookout/reference/mvscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute robust multivariate scaled data — mvscale","title":"Compute robust multivariate scaled data — mvscale","text":"multivariate version base::scale(), takes account covariance matrix data, uses robust estimates center, scale covariance default. centers removed using medians, scale function IQR, covariance matrix estimated using robust OGK estimate. data scaled using Cholesky decomposition inverse covariance. scaled data returned.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/mvscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute robust multivariate scaled data — mvscale","text":"","code":"mvscale(   object,   center = stats::median,   scale = robustbase::s_Qn,   cov = robustbase::covOGK,   warning = TRUE )"},{"path":"https://sevvandi.github.io/lookout/reference/mvscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute robust multivariate scaled data — mvscale","text":"object vector, matrix, data frame containing numerical data. center function compute center numerical variable. Set NULL centering required. scale function scale numerical variable. cov = robustbase::covOGK(), passed sigmamu argument. cov function compute covariance matrix. Set NULL rotation required. warning warning issued non-numeric columns ignored?","code":""},{"path":"https://sevvandi.github.io/lookout/reference/mvscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute robust multivariate scaled data — mvscale","text":"vector, matrix data frame size class object, numerical variables replaced scaled versions.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/mvscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute robust multivariate scaled data — mvscale","text":"Optionally, centering scaling can done variable separately, rotation data, setting cov = NULL. Also optionally, non-robust methods can used specifying center = mean, scale = stats::sd(), cov = stats::cov(). non-numeric columns retained warning.","code":""},{"path":[]},{"path":"https://sevvandi.github.io/lookout/reference/mvscale.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute robust multivariate scaled data — mvscale","text":"Rob J Hyndman","code":""},{"path":"https://sevvandi.github.io/lookout/reference/mvscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute robust multivariate scaled data — mvscale","text":"","code":"# Univariate z-scores (no rotation) z <- mvscale(faithful, center = mean, scale = sd, cov = NULL, warning = FALSE) # Non-robust scaling with rotation z <- mvscale(faithful, center = mean, cov = stats::cov, warning = FALSE) # Robust scaling and rotation z <- mvscale(faithful, warning = FALSE)"},{"path":"https://sevvandi.github.io/lookout/reference/persisting_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes outlier persistence for a range of significance values. — persisting_outliers","title":"Computes outlier persistence for a range of significance values. — persisting_outliers","text":"function computes outlier persistence range significance values, using algorithm lookout, outlier detection method uses leave-one-kernel density estimates generalized Pareto distributions find outliers.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/persisting_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes outlier persistence for a range of significance values. — persisting_outliers","text":"","code":"persisting_outliers(   X,   alpha = seq(0.01, 0.1, by = 0.01),   st_qq = 0.9,   scale = TRUE,   num_steps = 20,   old_version = FALSE )"},{"path":"https://sevvandi.github.io/lookout/reference/persisting_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes outlier persistence for a range of significance values. — persisting_outliers","text":"X input data matrix, data.frame, tibble format. columns numeric. alpha Grid significance levels. st_qq starting quantile death radii sequence. used compute starting bandwidth value. scale TRUE, data scaled. Default TRUE. scaling method used depends old_version parameter. See lookout details. num_steps length bandwidth sequence. old_version Logical indicator version algorithm use.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/persisting_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes outlier persistence for a range of significance values. — persisting_outliers","text":"list following components: 3D array N x num_steps x num_alpha N denotes number observations, num_steps denote length bandwidth sequence, num_alpha denotes number significance levels. binary array entries set 1 observation outlier particular bandwidth significance level. bw set bandwidth values. gpdparas GPD parameters used. lookoutbw bandwidth chosen algorithm lookout using persistent homology.","code":""},{"path":"https://sevvandi.github.io/lookout/reference/persisting_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes outlier persistence for a range of significance values. — persisting_outliers","text":"","code":"X <- rbind(   data.frame(     x = rnorm(500),     y = rnorm(500)   ),   data.frame(     x = rnorm(5, mean = 10, sd = 0.2),     y = rnorm(5, mean = 10, sd = 0.2)   ) ) plot(X, pch = 19)  outliers <- persisting_outliers(X, scale = FALSE) outliers #> Persistent outliers using lookout algorithm #>  #> Call: persisting_outliers(X = X, scale = FALSE) #>  #> Lookout bandwidth:  3.049485  autoplot(outliers)"},{"path":"https://sevvandi.github.io/lookout/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot","code":""}]
